<%- include('../partials/navbar') %>

<div class="container mx-auto px-4 py-8">
    <div class="flex flex-col lg:flex-row gap-8">
        <!-- Sidebar -->
        <div class="lg:w-1/4">
            <%- include('../partials/profileSidebar', { currentPage: 'address' }) %>
        </div>

        <!-- Main Content -->
        <div class="lg:w-3/4">
            <div class="mb-6">
                <h1 class="text-2xl font-bold text-gray-800">Manage Your Addresses</h1>
                <p class="text-gray-600">You can save up to 4 delivery addresses</p>
            </div>

            <!-- Replace the flash message sections with an empty div to handle SweetAlert messages -->
            <div id="alertContainer"></div>

            <!-- Address Cards Container -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <% if (addresses && addresses.length > 0) { %>
                    <% addresses.forEach(address => { %>
                        <div class="bg-white p-5 rounded-lg shadow-md border border-gray-200">
                            <div class="flex justify-between items-start mb-3">
                                <h3 class="font-bold text-lg"><%= address.name %></h3>
                                <div class="flex space-x-2">
                                    <button class="text-blue-600 hover:text-blue-800" onclick="openEditModal('<%= address._id %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="text-red-600 hover:text-red-800" onclick="deleteAddress('<%= address._id %>')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="text-gray-700">
                                <p><%= address.houseName %></p>
                                <p><%= address.localityStreet %></p>
                                <p><%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                                <p class="mt-2">Phone: <%= address.phone %></p>
                                <% if (address.alternatePhone) { %>
                                    <p>Alternate: <%= address.alternatePhone %></p>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                <% } %>

                <% if (!addresses || addresses.length < 4) { %>
                    <div class="bg-white p-5 rounded-lg shadow-md border border-dashed border-gray-300 flex items-center justify-center cursor-pointer hover:bg-gray-50" onclick="openAddModal()">
                        <div class="text-center">
                            <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3">
                                <i class="fas fa-plus text-gray-500"></i>
                            </div>
                            <p class="text-gray-700 font-medium">Add New Address</p>
                        </div>
                    </div>
                <% } %>
            </div>

            <% if (!addresses || addresses.length === 0) { %>
                <div class="bg-white p-8 rounded-lg shadow-md text-center mb-6">
                    <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-map-marker-alt text-gray-500 text-xl"></i>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 mb-2">No Addresses Found</h3>
                    <p class="text-gray-600 mb-4">You haven't added any delivery addresses yet.</p>
                    <button onclick="openAddModal()" class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors">
                        Add Your First Address
                    </button>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Add Address Modal with proper faded overlay -->
<div id="addAddressModal" class="fixed inset-0 z-50 hidden overflow-auto">
    <!-- Semi-transparent overlay -->
    <div class="fixed inset-0 bg-black opacity-70"></div>
    <!-- Modal Content -->
    <div class="relative flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto z-10">
            <div class="p-5 border-b border-gray-200">
                <div class="flex justify-between items-center">
                    <h3 class="text-xl font-semibold text-gray-800">Add New Address</h3>
                    <button onclick="closeAddModal()" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <form id="addAddressForm" action="/address/add" method="POST" class="p-5">
                <div class="space-y-4">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                        <input type="text" id="name" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="houseName" class="block text-sm font-medium text-gray-700 mb-1">House Name/Number</label>
                        <input type="text" id="houseName" name="houseName" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="localityStreet" class="block text-sm font-medium text-gray-700 mb-1">Street/Locality</label>
                        <input type="text" id="localityStreet" name="localityStreet" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label for="city" class="block text-sm font-medium text-gray-700 mb-1">City</label>
                            <input type="text" id="city" name="city" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                        </div>
                        <div>
                            <label for="state" class="block text-sm font-medium text-gray-700 mb-1">State</label>
                            <input type="text" id="state" name="state" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                        </div>
                    </div>
                    <div>
                        <label for="pincode" class="block text-sm font-medium text-gray-700 mb-1">Pincode</label>
                        <input type="text" id="pincode" name="pincode" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                        <input type="tel" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="alternatePhone" class="block text-sm font-medium text-gray-700 mb-1">Alternate Phone (Optional)</label>
                        <input type="tel" id="alternatePhone" name="alternatePhone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                </div>
                <div class="mt-6 flex justify-end space-x-3">
                    <button type="button" onclick="closeAddModal()" class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Save Address
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Address Modal with proper faded overlay -->
<div id="editAddressModal" class="fixed inset-0 z-50 hidden overflow-auto">
    <!-- Semi-transparent overlay -->
    <div class="fixed inset-0 bg-black opacity-70"></div>
    <!-- Modal Content -->
    <div class="relative flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto z-10">
            <div class="p-5 border-b border-gray-200">
                <div class="flex justify-between items-center">
                    <h3 class="text-xl font-semibold text-gray-800">Edit Address</h3>
                    <button onclick="closeEditModal()" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <form id="editAddressForm" action="/address/update" method="POST" class="p-5">
                <input type="hidden" id="editAddressId" name="addressId">
                <div class="space-y-4">
                    <div>
                        <label for="editName" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                        <input type="text" id="editName" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="editHouseName" class="block text-sm font-medium text-gray-700 mb-1">House Name/Number</label>
                        <input type="text" id="editHouseName" name="houseName" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="editLocalityStreet" class="block text-sm font-medium text-gray-700 mb-1">Street/Locality</label>
                        <input type="text" id="editLocalityStreet" name="localityStreet" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label for="editCity" class="block text-sm font-medium text-gray-700 mb-1">City</label>
                            <input type="text" id="editCity" name="city" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                        </div>
                        <div>
                            <label for="editState" class="block text-sm font-medium text-gray-700 mb-1">State</label>
                            <input type="text" id="editState" name="state" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                        </div>
                    </div>
                    <div>
                        <label for="editPincode" class="block text-sm font-medium text-gray-700 mb-1">Pincode</label>
                        <input type="text" id="editPincode" name="pincode" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="editPhone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                        <input type="tel" id="editPhone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                    </div>
                    <div>
                        <label for="editAlternatePhone" class="block text-sm font-medium text-gray-700 mb-1">Alternate Phone (Optional)</label>
                        <input type="tel" id="editAlternatePhone" name="alternatePhone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                </div>
                <div class="mt-6 flex justify-end space-x-3">
                    <button type="button" onclick="closeEditModal()" class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Update Address
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal with proper faded overlay -->
<div id="deleteModal" class="fixed inset-0 z-50 hidden overflow-auto">
    <!-- Semi-transparent overlay -->
    <div class="fixed inset-0 bg-black opacity-70"></div>
    <!-- Modal Content -->
    <div class="relative flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg max-w-md w-full p-6 z-10">
            <h3 class="text-xl font-semibold text-gray-800 mb-4">Delete Address</h3>
            <p class="text-gray-700 mb-6">Are you sure you want to delete this address? This action cannot be undone.</p>
            <div class="flex justify-end space-x-3">
                <button onclick="closeDeleteModal()" class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors">
                    Cancel
                </button>
                <form id="deleteAddressForm" action="/address/delete" method="POST">
                    <input type="hidden" id="deleteAddressId" name="addressId">
                    <button type="submit" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
                        Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Add SweetAlert CDN in the script section at the bottom of the file -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Display flash messages with SweetAlert if they exist
    document.addEventListener('DOMContentLoaded', function() {
        <% if (locals.messages && messages.error) { %>
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: '<%= messages.error %>',
                confirmButtonColor: '#ef4444'
            });
        <% } %>
        
        <% if (locals.messages && messages.success) { %>
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: '<%= messages.success %>',
                confirmButtonColor: '#3b82f6'
            });
        <% } %>
    });
    
    // Add Address Modal Functions
    function openAddModal() {
        document.getElementById('addAddressModal').classList.remove('hidden');
    }
    
    function closeAddModal() {
        document.getElementById('addAddressModal').classList.add('hidden');
        document.getElementById('addAddressForm').reset();
    }
    
    // Add form submission handler with validation
    document.getElementById('addAddressForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const phone = document.getElementById('phone').value;
        const alternatePhone = document.getElementById('alternatePhone').value;
        const pincode = document.getElementById('pincode').value;
        
        // Validation
        if (!/^\d{10}$/.test(phone)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Phone Number',
                text: 'Phone number must be 10 digits',
                confirmButtonColor: '#3b82f6'
            });
            return;
        }
        
        if (alternatePhone && !/^\d{10}$/.test(alternatePhone)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Alternate Phone',
                text: 'Alternate phone number must be 10 digits',
                confirmButtonColor: '#3b82f6'
            });
            return;
        }
        
        if (!/^\d{6}$/.test(pincode)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Pincode',
                text: 'Pincode must be 6 digits',
                confirmButtonColor: '#3b82f6'
            });
            return;
        }
        
        // If validation passes, submit the form
        this.submit();
    });
    
    // Edit Address Modal Functions
    function openEditModal(addressId) {
        fetch(`/address/${addressId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(address => {
                document.getElementById('editAddressId').value = address._id;
                document.getElementById('editName').value = address.name;
                document.getElementById('editHouseName').value = address.houseName;
                document.getElementById('editLocalityStreet').value = address.localityStreet;
                document.getElementById('editCity').value = address.city;
                document.getElementById('editState').value = address.state;
                document.getElementById('editPincode').value = address.pincode;
                document.getElementById('editPhone').value = address.phone;
                document.getElementById('editAlternatePhone').value = address.alternatePhone || '';
                
                document.getElementById('editAddressModal').classList.remove('hidden');
            })
            .catch(error => {
                console.error('Error fetching address:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error loading address details. Please try again.',
                    confirmButtonColor: '#ef4444'
                });
            });
    }
    
    function closeEditModal() {
        document.getElementById('editAddressModal').classList.add('hidden');
        document.getElementById('editAddressForm').reset();
    }
    
    // Edit form submission handler with validation
    document.getElementById('editAddressForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const phone = document.getElementById('editPhone').value;
        const alternatePhone = document.getElementById('editAlternatePhone').value;
        const pincode = document.getElementById('editPincode').value;
        
        // Validation
        if (!/^\d{10}$/.test(phone)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Phone Number',
                text: 'Phone number must be 10 digits',
                confirmButtonColor: '#3b82f6'
            });
            return;
        }
        
        if (alternatePhone && !/^\d{10}$/.test(alternatePhone)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Alternate Phone',
                text: 'Alternate phone number must be 10 digits',
                confirmButtonColor: '#3b82f6'
            });
            return;
        }
        
        if (!/^\d{6}$/.test(pincode)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Pincode',
                text: 'Pincode must be 6 digits',
                confirmButtonColor: '#3b82f6'
            });
            return;
        }
        
        // If validation passes, submit the form
        this.submit();
    });
    
    // Delete Address Functions
    function deleteAddress(addressId) {
        Swal.fire({
            title: 'Delete Address',
            text: 'Are you sure you want to delete this address? This action cannot be undone.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#ef4444',
            cancelButtonColor: '#6b7280',
            confirmButtonText: 'Yes, delete it',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                // Create a form and submit it
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/address/delete';
                
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'addressId';
                input.value = addressId;
                
                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            }
        });
    }
</script>

<%- include('../partials/footer') %>
