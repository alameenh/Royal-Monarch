<%- include("../partials/navbar") %>

<div class="container mx-auto px-4 py-8">
    <!-- Filters and Search Section -->
    <div class="mb-8 grid grid-cols-1 md:grid-cols-4 gap-4">
        <div class="md:col-span-1">
            <input 
                type="text" 
                id="searchInput" 
                placeholder="Search products..." 
                class="w-full p-2 border rounded"
            >
        </div>
        <div class="md:col-span-1">
            <select id="categoryFilter" class="w-full p-2 border rounded">
                <option value="">All Categories</option>
                <% categories.forEach(category => { %>
                    <option value="<%= category._id %>"><%= category.name %></option>
                <% }); %>
            </select>
        </div>
        <div class="md:col-span-1">
            <select id="sortBy" class="w-full p-2 border rounded">
                <option value="createdAt:desc">Latest</option>
                <option value="price:asc">Price: Low to High</option>
                <option value="price:desc">Price: High to Low</option>
                <option value="name:asc">Name: A to Z</option>
                <option value="name:desc">Name: Z to A</option>
            </select>
        </div>
        <div class="md:col-span-1 flex gap-2">
            <input 
                type="number" 
                id="minPrice" 
                placeholder="Min Price" 
                class="w-1/2 p-2 border rounded"
            >
            <input 
                type="number" 
                id="maxPrice" 
                placeholder="Max Price" 
                class="w-1/2 p-2 border rounded"
            >
        </div>
    </div>

    <!-- Products Grid -->
    <div id="productsGrid" class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <!-- Products will be loaded here -->
    </div>

    <!-- Pagination -->
    <div id="pagination" class="mt-8 flex justify-center space-x-2">
        <!-- Pagination will be loaded here -->
    </div>

    <!-- Loading Spinner -->
    <div id="loading" class="hidden">
        <div class="flex justify-center items-center h-32">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-black"></div>
        </div>
    </div>
</div>

<%- include("../partials/footer") %>

<script>
let currentPage = 1;
let currentFilters = {
    search: '',
    category: '',
    sortBy: 'createdAt',
    order: 'desc',
    minPrice: '',
    maxPrice: '',
    limit: 12
};

// Product card template
const createProductCard = (product) => `
    <div class="bg-white rounded-lg shadow-md overflow-hidden group cursor-pointer"
         onclick="window.location.href='/product/view/${product._id}'">
        <div class="aspect-w-1 aspect-h-1 overflow-hidden">
            <img 
                src="${product.images[0].path}" 
                alt="${product.name}"
                class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
            >
        </div>
        <div class="p-4">
            <h3 class="text-lg font-semibold mb-2">${product.name}</h3>
            <p class="text-gray-600 mb-2">${product.brand}</p>
            <div class="flex justify-between items-center">
                <div class="flex flex-col">
                    <div class="flex items-center gap-2">
                        <span class="text-xl font-bold">₹${product.discountedPrice}</span>
                        ${product.offer ? `
                            <span class="text-sm text-gray-500 line-through">₹${product.originalPrice}</span>
                        ` : ''}
                    </div>
                    ${product.offer ? `
                        <span class="text-sm text-red-500">
                            ${product.offer.discount}% OFF - ${product.offer.name}
                        </span>
                    ` : ''}
                </div>
                <span class="text-black hover:text-gray-700">
                    <i class="fas fa-eye"></i>
                </span>
            </div>
        </div>
    </div>
`;

// Create pagination buttons
const createPagination = (pagination) => {
    const { currentPage, totalPages } = pagination;
    let html = '';
    
    if (pagination.hasPrevPage) {
        html += `<button class="px-4 py-2 border rounded" onclick="changePage(${currentPage - 1})">Previous</button>`;
    }
    
    for (let i = 1; i <= totalPages; i++) {
        if (i === currentPage) {
            html += `<button class="px-4 py-2 bg-black text-white rounded">${i}</button>`;
        } else if (i === 1 || i === totalPages || (i >= currentPage - 1 && i <= currentPage + 1)) {
            html += `<button class="px-4 py-2 border rounded" onclick="changePage(${i})">${i}</button>`;
        } else if (i === currentPage - 2 || i === currentPage + 2) {
            html += `<span class="px-4 py-2">...</span>`;
        }
    }
    
    if (pagination.hasNextPage) {
        html += `<button class="px-4 py-2 border rounded" onclick="changePage(${currentPage + 1})">Next</button>`;
    }
    
    return html;
};

// Fetch products with filters
const fetchProducts = async () => {
    try {
        document.getElementById('loading').classList.remove('hidden');
        
        const queryString = new URLSearchParams({
            ...currentFilters,
            page: currentPage
        }).toString();
        
        const response = await fetch(`/shop/products?${queryString}`);
        const data = await response.json();
        
        if (data.success) {
            const productsGrid = document.getElementById('productsGrid');
            const paginationDiv = document.getElementById('pagination');
            
            productsGrid.innerHTML = data.products.map(createProductCard).join('');
            paginationDiv.innerHTML = createPagination(data.pagination);
        }
    } catch (error) {
        console.error('Error fetching products:', error);
    } finally {
        document.getElementById('loading').classList.add('hidden');
    }
};

// Event handlers
const debounce = (func, wait) => {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
};

document.getElementById('searchInput').addEventListener('input', debounce((e) => {
    currentFilters.search = e.target.value;
    currentPage = 1;
    fetchProducts();
}, 300));

document.getElementById('categoryFilter').addEventListener('change', (e) => {
    currentFilters.category = e.target.value;
    currentPage = 1;
    fetchProducts();
});

document.getElementById('sortBy').addEventListener('change', (e) => {
    const [sortBy, order] = e.target.value.split(':');
    currentFilters.sortBy = sortBy;
    currentFilters.order = order;
    currentPage = 1;
    fetchProducts();
});

document.getElementById('minPrice').addEventListener('input', debounce((e) => {
    currentFilters.minPrice = e.target.value;
    currentPage = 1;
    fetchProducts();
}, 300));

document.getElementById('maxPrice').addEventListener('input', debounce((e) => {
    currentFilters.maxPrice = e.target.value;
    currentPage = 1;
    fetchProducts();
}, 300));

const changePage = (page) => {
    currentPage = page;
    fetchProducts();
    window.scrollTo({ top: 0, behavior: 'smooth' });
};

// Initial load
fetchProducts();
</script>
