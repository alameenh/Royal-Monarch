<%- include('../partials/navbar') %>

<div class="container mx-auto px-4 py-8">
    <div class="flex flex-col lg:flex-row gap-8">
        <!-- Sidebar -->
        <div class="lg:w-1/4">
            <%- include('../partials/profileSidebar') %>
        </div>

        <!-- Main Content -->
        <div class="lg:w-3/4">
            <h1 class="text-2xl font-bold mb-6">Checkout</h1>

            <!-- Shipping Address Section -->
            <div class="bg-white p-4 rounded-lg shadow-md mb-6">
                <div class="flex justify-between items-center mb-3">
                    <h2 class="text-xl font-semibold">Shipping Address</h2>
                    <a href="/address" class="text-blue-600 hover:text-blue-800 text-sm">
                        Add New Address
                    </a>
                </div>

                <div class="space-y-3">
                    <% if (addresses && addresses.length > 0) { %>
                        <% addresses.forEach(address => { %>
                            <div class="border rounded-lg p-3 hover:border-black transition-colors">
                                <label class="flex items-start gap-3 cursor-pointer">
                                    <input type="radio" 
                                           name="selectedAddress" 
                                           value="<%= address._id %>"
                                           class="mt-1"
                                           required>
                                    <div class="text-sm">
                                        <p class="font-semibold"><%= address.name %></p>
                                        <p class="text-gray-600">
                                            <%= address.houseName %>, 
                                            <%= address.localityStreet %>, 
                                            <%= address.city %>, 
                                            <%= address.state %> - <%= address.pincode %>
                                        </p>
                                        <p class="text-gray-600">
                                            Ph: <%= address.phone %>
                                            <% if (address.alternatePhone) { %>
                                                | Alt: <%= address.alternatePhone %>
                                            <% } %>
                                        </p>
                                    </div>
                                </label>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <p class="text-center text-gray-600 text-sm py-2">
                            No addresses found. Please add a delivery address.
                        </p>
                    <% } %>
                </div>
            </div>

            <div class="flex flex-col md:flex-row gap-8">
                <!-- Order Items -->
                <div class="md:w-2/3">
                    <div class="bg-white p-6 rounded-lg shadow-md">
                        <h2 class="text-xl font-semibold mb-4">Order Items</h2>
                        <div class="space-y-4">
                            <% cartItems.forEach(item => { %>
                                <div class="flex gap-4 border-b pb-4">
                                    <img src="<%= item.productId.images[0].path %>" 
                                         alt="<%= item.productId.name %>"
                                         class="w-20 h-20 object-cover rounded">
                                    <div class="flex-grow">
                                        <h3 class="font-semibold"><%= item.productId.name %></h3>
                                        <p class="text-gray-600">Brand: <%= item.productId.brand %></p>
                                        <p class="text-gray-600">Variant: <%= item.variantType %></p>
                                        <div class="mt-2">
                                            <% if (item.offer) { %>
                                                <p class="text-sm text-gray-500 line-through">
                                                    ₹<%= item.originalPrice.toFixed(2) %>
                                                </p>
                                                <p class="text-sm text-green-600">
                                                    <%= item.offer.discount %>% off - <%= item.offer.name %>
                                                    (<%= item.offer.type === 'product' ? 'Product Offer' : 'Category Offer' %>)
                                                </p>
                                            <% } %>
                                            <p class="font-semibold">
                                                ₹<%= item.discountedPrice.toFixed(2) %> x <%= item.quantity %>
                                            </p>
                                            <p class="text-sm font-semibold text-gray-800">
                                                Total: ₹<%= item.totalPrice.toFixed(2) %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>

                <!-- Order Summary -->
                <div class="md:w-1/3">
                    <div class="bg-white p-6 rounded-lg shadow-md sticky top-4">
                        <!-- Coupon Section -->
                        <div class="mb-6 border-b pb-4">
                            <h3 class="font-semibold mb-2">Apply Coupon</h3>
                            <% if (coupons && coupons.length > 0) { %>
                                <select id="couponSelect" class="w-full p-2 border rounded mb-2">
                                    <option value="">Select a coupon</option>
                                    <% coupons.forEach(coupon => { %>
                                        <option value="<%= coupon._id %>" 
                                                data-type="<%= coupon.discountType %>"
                                                data-value="<%= coupon.discountValue %>"
                                                data-max="<%= coupon.maxDiscount %>">
                                            <%= coupon.code %> - 
                                            <%= coupon.discountType === 'PERCENTAGE' ? 
                                                `${coupon.discountValue}% off` : 
                                                `₹${coupon.discountValue} off` %>
                                            <% if (coupon.maxDiscount) { %>
                                                (Max: ₹<%= coupon.maxDiscount %>)
                                            <% } %>
                                        </option>
                                    <% }); %>
                                </select>
                                <button onclick="applyCoupon()" 
                                        class="w-full bg-gray-800 text-white py-2 rounded hover:bg-gray-700">
                                    Apply Coupon
                                </button>
                            <% } else { %>
                                <p class="text-sm text-gray-600">No coupons available for this order</p>
                            <% } %>
                        </div>

                        <!-- Order Summary Section -->
                        <h2 class="text-xl font-semibold mb-4">Order Summary</h2>
                        <div class="space-y-3">
                            <div class="flex justify-between">
                                <span>Subtotal</span>
                                <span>₹<%= subtotal.toFixed(2) %></span>
                            </div>

                            <% if (totalOfferDiscount > 0) { %>
                                <div class="flex justify-between text-green-600">
                                    <span>Offer Discount</span>
                                    <span>-₹<%= totalOfferDiscount.toFixed(2) %></span>
                                </div>
                            <% } %>

                            <!-- Coupon Discount Row (Hidden by default) -->
                            <div id="couponDiscountRow" class="flex justify-between text-green-600 hidden">
                                <span>Coupon Discount</span>
                                <span>-₹<span id="couponDiscountAmount">0.00</span></span>
                            </div>

                            <div class="flex justify-between text-gray-600">
                                <span>GST (10%)</span>
                                <span>₹<%= gstAmount.toFixed(2) %></span>
                            </div>

                            <div class="flex justify-between">
                                <span>Shipping</span>
                                <span>₹<%= shippingCost.toFixed(2) %></span>
                            </div>

                            <div class="border-t pt-3">
                                <div class="flex justify-between font-bold">
                                    <span>Total</span>
                                    <span>₹<span id="finalTotal"><%= total.toFixed(2) %></span></span>
                                </div>
                            </div>
                        </div>

                        <!-- Payment Method Selection -->
                        <div class="mt-6">
                            <h3 class="font-semibold mb-3">Payment Method</h3>
                            <div class="space-y-2">
                                <label class="flex items-center gap-2">
                                    <input type="radio" name="paymentMethod" value="cod" checked>
                                    <span>Cash on Delivery</span>
                                </label>
                                <label class="flex items-center gap-2">
                                    <input type="radio" name="paymentMethod" value="online">
                                    <span>Online Payment</span>
                                </label>
                                <label class="flex items-center gap-2">
                                    <input type="radio" name="paymentMethod" value="wallet">
                                    <span>Wallet</span>
                                </label>
                            </div>
                        </div>

                        <!-- Place Order Button -->
                        <button id="placeOrderButton"
                                class="w-full mt-6 bg-black text-white py-3 rounded-lg hover:bg-gray-800 transition-colors">
                            Place Order
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
let appliedCoupon = null;

async function applyCoupon() {
    try {
        const select = document.getElementById('couponSelect');
        const option = select.options[select.selectedIndex];

        if (!option.value) {
            throw new Error('Please select a coupon');
        }

        const response = await fetch('/apply-coupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                couponId: option.value,
                subtotal: <%= subtotal - totalOfferDiscount %>,
                items: <%- JSON.stringify(cartItems.map(item => ({
                    id: item.productId._id,
                    price: item.discountedPrice,
                    quantity: item.quantity
                }))) %>
            })
        });

        const data = await response.json();

        if (data.success) {
            // Show coupon discount
            document.getElementById('couponDiscountRow').classList.remove('hidden');
            document.getElementById('couponDiscountAmount').textContent = 
                data.discount.toFixed(2);

            // Update final total
            const subtotalAfterOffers = <%= subtotal - totalOfferDiscount %>;
            const gstAmount = (subtotalAfterOffers - data.discount) * 0.10;
            const newTotal = subtotalAfterOffers - data.discount + gstAmount + <%= shippingCost %>;
            document.getElementById('finalTotal').textContent = newTotal.toFixed(2);

            // Store applied coupon
            appliedCoupon = {
                id: option.value,
                code: option.textContent.split(' - ')[0],
                discount: data.discount
            };

            Swal.fire({
                icon: 'success',
                title: 'Coupon Applied',
                text: `Discount of ₹${data.discount.toFixed(2)} applied successfully!`
            });
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to apply coupon'
        });
    }
}

async function placeOrder(event) {
    event.preventDefault();
    
    // Check if address is selected
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
    if (!selectedAddress) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Please select a delivery address'
        });
        return;
    }

    // Check if payment method is selected
    const selectedPayment = document.querySelector('input[name="paymentMethod"]:checked');
    if (!selectedPayment) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Please select a payment method'
        });
        return;
    }
    
    const formData = {
        addressId: selectedAddress.value,
        paymentMethod: selectedPayment.value,
        coupon: appliedCoupon
    };

    try {
        const response = await fetch('/order/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();

        if (data.success) {
            if (data.paymentMethod === 'cod') {
                window.location.href = data.redirect;
            } 
            else if (data.paymentMethod === 'online') {
                // Initialize Razorpay payment
                const options = {
                    key: '<%= razorpayKey %>',
                    amount: data.razorpayOrder.amount,
                    currency: data.razorpayOrder.currency,
                    order_id: data.razorpayOrder.id,
                    name: 'Royal Monarch',
                    description: 'Order Payment',
                    handler: async function (response) {
                        try {
                            // Verify payment
                            const verifyResponse = await fetch('/order/verify-payment', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature
                                })
                            });

                            const verifyData = await verifyResponse.json();
                            
                            if (verifyData.success) {
                                window.location.href = verifyData.redirect;
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Payment Failed',
                                    text: 'Payment verification failed. Please contact support.'
                                });
                            }
                        } catch (error) {
                            console.error('Payment verification error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Failed',
                                text: 'Payment verification failed. Please try again.'
                            });
                        }
                    },
                    modal: {
                        ondismiss: function() {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Payment Cancelled',
                                text: 'Payment was cancelled. Please try again.'
                            });
                        }
                    },
                    prefill: {
                        name: '<%= user.firstName %> <%= user.lastName %>',
                        email: '<%= user.email %>',
                        contact: '<%= user.phone %>'
                    },
                    theme: {
                        color: '#000000'
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();
                
                // Handle payment failures
                rzp.on('payment.failed', function (response) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'The payment failed. Please try again.'
                    });
                });
            }
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message || 'Failed to create order'
            });
        }
    } catch (error) {
        console.error('Order creation error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to create order. Please try again.'
        });
    }
}

// Add event listener to the form
document.getElementById('placeOrderButton').addEventListener('click', placeOrder);
</script>

<%- include('../partials/footer') %>
