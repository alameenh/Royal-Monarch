<%- include("../partials/navbar") %>

    <div class="justify-center items-center h-screen flex">
        <div class="rounded-lg shadow-lg w-80 border-2 p-8">
            <h2 class="text-center text-xl font-semibold text-gray-700 mb-4">Sign Up</h2>
            <form id="signupForm" class="space-y-4" novalidate>
                <div class="space-y-4">
                    <div>
                        <input id="firstName" type="text" placeholder="First Name"
                            class="border-gray-300 rounded w-full px-4 py-2 bg-gray-200 focus:outline-none focus:ring-2 focus:ring-black" />
                        <p class="text-red-500 text-xs mt-1 hidden" id="firstNameError"></p>
                    </div>

                    <div>
                        <input id="lastName" type="text" placeholder="Last Name"
                            class="border-gray-300 rounded w-full px-4 py-2 bg-gray-200 focus:outline-none focus:ring-2 focus:ring-black" />
                        <p class="text-red-500 text-xs mt-1 hidden" id="lastNameError"></p>
                    </div>

                    <div>
                        <input id="email" type="email" placeholder="Email"
                            class="border-gray-300 rounded w-full px-4 py-2 bg-gray-200 focus:outline-none focus:ring-2 focus:ring-black" />
                        <p class="text-red-500 text-xs mt-1 hidden" id="emailError"></p>
                    </div>

                    <div>
                        <input id="password" type="password" placeholder="Password"
                            class="border-gray-300 rounded w-full px-4 py-2 bg-gray-200 focus:outline-none focus:ring-2 focus:ring-black" />
                        <p class="text-red-500 text-xs mt-1 hidden" id="passwordError"></p>
                    </div>

                    <div>
                        <input id="confirmPassword" type="password" placeholder="Confirm Password"
                            class="border-gray-300 rounded w-full px-4 py-2 bg-gray-200 focus:outline-none focus:ring-2 focus:ring-black" />
                        <p class="text-red-500 text-xs mt-1 hidden" id="confirmPasswordError"></p>
                    </div>
                </div>
                <button type="submit" id="signupButton"
                    class="rounded w-full py-2 mt-4 bg-black text-white hover:bg-gray-800 transition-colors duration-200 disabled:bg-gray-400">
                    Sign Up
                </button>
            </form>
            <p class="text-center text-gray-700 mt-4">Already have an account?
                <a href="/" class="text-black hover:underline">Login</a>
            </p>

            <!-- Google Sign in -->
            <div id="google-auth-div">
                <div class="flex justify-center text-center mt-6 text-gray-500 text-sm">
                    Or continue with Google
                </div>
                <a class="flex justify-center mt-6" href="/auth/google?trigger=signup">
                    <i class="fa-brands fa-google fa-lg" style="color: #b12020"></i>
                </a>
            </div>
        </div>
    </div>

    <%- include("../partials/footer") %>

    <script>
        const signupForm = document.getElementById('signupForm');
        const signupButton = document.getElementById('signupButton');

        // Validation functions
        function validateFirstName(firstName) {
            if (!firstName) return 'First name is required';
            if (firstName.length < 2) return 'First name must be at least 2 characters';
            if (!/^[a-zA-Z\s]+$/.test(firstName)) return 'First name should only contain letters';
            return '';
        }

        function validateLastName(lastName) {
            if (!lastName) return 'Last name is required';
            if (lastName.length < 2) return 'Last name must be at least 2 characters';
            if (!/^[a-zA-Z\s]+$/.test(lastName)) return 'Last name should only contain letters';
            return '';
        }

        function validateEmail(email) {
            if (!email) return 'Email is required';
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) return 'Please enter a valid email address';
            return '';
        }

        function validatePassword(password) {
            if (!password) return 'Password is required';
            if (password.length < 8) return 'Password must be at least 8 characters';
            if (!/[A-Z]/.test(password)) return 'Password must contain at least one uppercase letter';
            if (!/[a-z]/.test(password)) return 'Password must contain at least one lowercase letter';
            if (!/[0-9]/.test(password)) return 'Password must contain at least one number';
            if (!/[!@#$%^&*]/.test(password)) return 'Password must contain at least one special character (!@#$%^&*)';
            return '';
        }

        function validateConfirmPassword(password, confirmPassword) {
            if (!confirmPassword) return 'Please confirm your password';
            if (password !== confirmPassword) return 'Passwords do not match';
            return '';
        }

        // Real-time validation
        document.getElementById('firstName').addEventListener('input', function(e) {
            const error = validateFirstName(e.target.value);
            document.getElementById('firstNameError').textContent = error;
            document.getElementById('firstNameError').classList.toggle('hidden', !error);
        });

        document.getElementById('lastName').addEventListener('input', function(e) {
            const error = validateLastName(e.target.value);
            document.getElementById('lastNameError').textContent = error;
            document.getElementById('lastNameError').classList.toggle('hidden', !error);
        });

        document.getElementById('email').addEventListener('input', function(e) {
            const error = validateEmail(e.target.value);
            document.getElementById('emailError').textContent = error;
            document.getElementById('emailError').classList.toggle('hidden', !error);
        });

        document.getElementById('password').addEventListener('input', function(e) {
            const error = validatePassword(e.target.value);
            document.getElementById('passwordError').textContent = error;
            document.getElementById('passwordError').classList.toggle('hidden', !error);

            // Also validate confirm password if it has a value
            const confirmPassword = document.getElementById('confirmPassword');
            if (confirmPassword.value) {
                const confirmError = validateConfirmPassword(e.target.value, confirmPassword.value);
                document.getElementById('confirmPasswordError').textContent = confirmError;
                document.getElementById('confirmPasswordError').classList.toggle('hidden', !confirmError);
            }
        });

        document.getElementById('confirmPassword').addEventListener('input', function(e) {
            const password = document.getElementById('password').value;
            const error = validateConfirmPassword(password, e.target.value);
            document.getElementById('confirmPasswordError').textContent = error;
            document.getElementById('confirmPasswordError').classList.toggle('hidden', !error);
        });

        signupForm.addEventListener('submit', async function (e) {
            e.preventDefault();

            try {
                const firstName = document.getElementById('firstName').value;
                const lastName = document.getElementById('lastName').value;
                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;
                const confirmPassword = document.getElementById('confirmPassword').value;

                // Validate all fields
                const firstNameError = validateFirstName(firstName);
                const lastNameError = validateLastName(lastName);
                const emailError = validateEmail(email);
                const passwordError = validatePassword(password);
                const confirmPasswordError = validateConfirmPassword(password, confirmPassword);

                // Show all errors
                document.getElementById('firstNameError').textContent = firstNameError;
                document.getElementById('firstNameError').classList.toggle('hidden', !firstNameError);
                document.getElementById('lastNameError').textContent = lastNameError;
                document.getElementById('lastNameError').classList.toggle('hidden', !lastNameError);
                document.getElementById('emailError').textContent = emailError;
                document.getElementById('emailError').classList.toggle('hidden', !emailError);
                document.getElementById('passwordError').textContent = passwordError;
                document.getElementById('passwordError').classList.toggle('hidden', !passwordError);
                document.getElementById('confirmPasswordError').textContent = confirmPasswordError;
                document.getElementById('confirmPasswordError').classList.toggle('hidden', !confirmPasswordError);

                // If there are any validation errors, stop form submission
                if (firstNameError || lastNameError || emailError || passwordError || confirmPasswordError) {
                    return;
                }

                const formData = { firstName, lastName, email, password, confirmPassword };

                const loadingAlert = Swal.fire({
                    title: 'Creating your account...',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });

                signupButton.disabled = true;
                const response = await axios.post('/signup', formData);
                loadingAlert.close();

                if (response.data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Signup successful. Please verify your email.',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    window.location.href = '/otpPage';
                }
            } catch (error) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.response?.data?.message || 'An error occurred during signup',
                    confirmButtonColor: '#3085d6'
                });
            } finally {
                signupButton.disabled = false;
            }
        });
    </script>