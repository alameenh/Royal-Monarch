<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offer Management</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-zinc-900 text-white min-h-screen">
    <%- include("../partials/sidebar") %>

    <div class="lg:ml-64 transition-all" id="main-content">
        <!-- Header -->
        <header class="flex items-center justify-between mb-8 p-4 lg:p-8 border-b border-gray-700">
            <h1 class="text-2xl font-semibold text-gray-200">Offer Management</h1>
            <button onclick="openAddOfferModal()"
                class="px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700 transition-colors">
                Add Offer
            </button>
        </header>

        <!-- Offer List -->
        <main class="p-4 lg:p-8">
            <div class="bg-zinc-800 rounded-lg p-6 overflow-x-auto">
                <table class="min-w-full text-left text-gray-400">
                    <thead>
                        <tr class="border-b border-gray-700">
                            <th class="py-3 px-4">Name</th>
                            <th class="py-3 px-4">Type</th>
                            <th class="py-3 px-4">Discount</th>
                            <th class="py-3 px-4">Applied To</th>
                            <th class="py-3 px-4">Duration</th>
                            <th class="py-3 px-4">Status</th>
                            <th class="py-3 px-4">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (offers && offers.length > 0) { %>
                            <% offers.forEach(offer => { %>
                                <tr class="border-b border-gray-700 hover:bg-zinc-700 transition-colors">
                                    <td class="py-3 px-4">
                                        <div class="text-gray-200"><%= offer.name %></div>
                                    </td>
                                    <td class="py-3 px-4">
                                        <span class="capitalize"><%= offer.type %></span>
                                    </td>
                                    <td class="py-3 px-4"><%= offer.discount %>%</td>
                                    <td class="py-3 px-4">
                                        <% if (offer.type === 'product') { %>
                                            <div class="text-sm">
                                                <% offer.productIds.forEach(product => { %>
                                                    <div class="mb-1"><%= product.name %></div>
                                                <% }) %>
                                            </div>
                                        <% } else { %>
                                            <%= offer.categoryId?.name || 'N/A' %>
                                        <% } %>
                                    </td>
                                    <td class="py-3 px-4">
                                        <div class="text-sm">
                                            <div>Start: <%= new Date(offer.startDate).toLocaleDateString() %></div>
                                            <div>End: <%= new Date(offer.endDate).toLocaleDateString() %></div>
                                        </div>
                                    </td>
                                    <td class="py-3 px-4">
                                        <span class="px-2 py-1 rounded-full text-sm
                                            <%= offer.isActive ? 'bg-green-500/20 text-green-500' : 'bg-red-500/20 text-red-500' %>">
                                            <%= offer.isActive ? 'Active' : 'Inactive' %>
                                        </span>
                                    </td>
                                    <td class="py-3 px-4">
                                        <div class="flex items-center gap-2">
                                            <button onclick="editOffer('<%= JSON.stringify(offer).replace(/'/g, '&apos;').replace(/"/g, '&quot;') %>')"
                                                class="px-3 py-1 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                                                Edit
                                            </button>
                                            <button onclick="toggleOfferStatus('<%= offer._id %>', <%= offer.isActive %>)"
                                                class="px-3 py-1 <%= offer.isActive ? 'bg-red-600' : 'bg-green-600' %> text-white rounded-md hover:opacity-90 transition-colors">
                                                <%= offer.isActive ? 'Deactivate' : 'Activate' %>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="7" class="py-8 text-center text-gray-400">
                                    <div class="flex flex-col items-center">
                                        <i class="material-icons text-4xl mb-2">local_offer</i>
                                        <p>No offers found</p>
                                    </div>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </main>
    </div>

    <!-- Offer Modal -->
    <div id="offerModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-40">
        <div class="relative w-11/12 max-w-2xl mx-auto my-6">
            <div class="bg-zinc-800 rounded-lg shadow-xl max-h-[90vh] overflow-y-auto p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-xl font-semibold" id="modalTitle">Add Offer</h3>
                    <button onclick="closeModal()" class="text-gray-400 hover:text-white">
                        <i class="material-icons">close</i>
                    </button>
                </div>
                <form id="offerForm" onsubmit="handleSubmit(event)">
                    <!-- Form content will be injected here -->
                </form>
            </div>
        </div>
    </div>

    <script>
        let isEditMode = false;
        let currentOfferId = null;
        const categories = <%- JSON.stringify(categories || []) %>;
        const products = <%- JSON.stringify(products || []) %>;

        function createFormHTML(offer = null) {
            const today = new Date().toISOString().split('T')[0];
            return `
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium mb-1">Offer Name</label>
                        <input type="text" name="name" class="w-full p-2 bg-zinc-700 rounded" 
                               value="${offer?.name || ''}" required>
                    </div>

                    <div>
                        <label class="block text-sm font-medium mb-1">Offer Type</label>
                        <select name="type" class="w-full p-2 bg-zinc-700 rounded" 
                                onchange="handleTypeChange(this.value)" required>
                            <option value="">Select Type</option>
                            <option value="product" ${offer?.type === 'product' ? 'selected' : ''}>Product</option>
                            <option value="category" ${offer?.type === 'category' ? 'selected' : ''}>Category</option>
                        </select>
                    </div>

                    <div>
                        <label class="block text-sm font-medium mb-1">Discount Percentage</label>
                        <input type="number" name="discount" class="w-full p-2 bg-zinc-700 rounded" 
                               value="${offer?.discount || ''}" min="0" max="100" required>
                    </div>

                    <div id="productSelection" class="${offer?.type === 'product' ? '' : 'hidden'}">
                        <label class="block text-sm font-medium mb-1">Select Products</label>
                        <select name="productIds" multiple class="w-full p-2 bg-zinc-700 rounded" size="5">
                            ${products.map(product => `
                                <option value="${product._id}" 
                                    ${offer?.productIds?.some(p => p._id === product._id) ? 'selected' : ''}>
                                    ${product.name}
                                </option>
                            `).join('')}
                        </select>
                    </div>

                    <div id="categorySelection" class="${offer?.type === 'category' ? '' : 'hidden'}">
                        <label class="block text-sm font-medium mb-1">Select Category</label>
                        <select name="categoryId" class="w-full p-2 bg-zinc-700 rounded">
                            <option value="">Select Category</option>
                            ${categories.map(category => `
                                <option value="${category._id}" 
                                    ${offer?.categoryId?._id === category._id ? 'selected' : ''}>
                                    ${category.name}
                                </option>
                            `).join('')}
                        </select>
                    </div>

                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium mb-1">Start Date</label>
                            <input type="date" name="startDate" class="w-full p-2 bg-zinc-700 rounded" 
                                   value="${offer?.startDate?.split('T')[0] || today}" min="${today}" required>
                        </div>
                        <div>
                            <label class="block text-sm font-medium mb-1">End Date</label>
                            <input type="date" name="endDate" class="w-full p-2 bg-zinc-700 rounded" 
                                   value="${offer?.endDate?.split('T')[0] || ''}" min="${today}" required>
                        </div>
                    </div>

                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" onclick="closeModal()" 
                                class="px-4 py-2 bg-gray-600 rounded hover:bg-gray-500">
                            Cancel
                        </button>
                        <button type="submit" 
                                class="px-4 py-2 bg-emerald-600 rounded hover:bg-emerald-500">
                            ${isEditMode ? 'Update' : 'Add'} Offer
                        </button>
                    </div>
                </div>
            `;
        }

        function openAddOfferModal() {
            isEditMode = false;
            currentOfferId = null;
            document.getElementById('modalTitle').textContent = 'Add Offer';
            document.getElementById('offerForm').innerHTML = createFormHTML();
            document.getElementById('offerModal').classList.remove('hidden');
        }

        function editOffer(offerData) {
            try {
                const offer = JSON.parse(offerData.replace(/&quot;/g, '"').replace(/&apos;/g, "'"));
                isEditMode = true;
                currentOfferId = offer._id;
                document.getElementById('modalTitle').textContent = 'Edit Offer';
                document.getElementById('offerForm').innerHTML = createFormHTML(offer);
                document.getElementById('offerModal').classList.remove('hidden');
            } catch (error) {
                showError('Error loading offer data');
            }
        }

        function handleTypeChange(type) {
            document.getElementById('productSelection').classList.toggle('hidden', type !== 'product');
            document.getElementById('categorySelection').classList.toggle('hidden', type !== 'category');
        }

        async function handleSubmit(event) {
            event.preventDefault();
            try {
                const formData = new FormData(event.target);
                const data = {
                    name: formData.get('name'),
                    type: formData.get('type'),
                    discount: Number(formData.get('discount')),
                    startDate: formData.get('startDate'),
                    endDate: formData.get('endDate')
                };

                if (data.type === 'product') {
                    data.productIds = Array.from(event.target.productIds.selectedOptions).map(option => option.value);
                } else {
                    data.categoryId = formData.get('categoryId');
                }

                const url = isEditMode ? `/admin/offers/${currentOfferId}` : '/admin/offers';
                const method = isEditMode ? 'PUT' : 'POST';

                const response = await fetch(url, {
                    method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (!response.ok) {
                    throw new Error(result.error || 'Failed to save offer');
                }

                await Swal.fire({
                    title: 'Success!',
                    text: isEditMode ? 'Offer updated successfully' : 'Offer created successfully',
                    icon: 'success',
                    background: '#18181B',
                    color: '#FFFFFF'
                });

                window.location.reload();
            } catch (error) {
                showError(error.message);
            }
        }

        async function toggleOfferStatus(offerId, currentStatus) {
            try {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: currentStatus ? 'This will deactivate the offer' : 'This will activate the offer',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: currentStatus ? '#DC2626' : '#059669',
                    cancelButtonColor: '#4B5563',
                    confirmButtonText: currentStatus ? 'Yes, deactivate it!' : 'Yes, activate it!',
                    background: '#18181B',
                    color: '#FFFFFF'
                });

                if (result.isConfirmed) {
                    const response = await fetch(`/admin/offers/${offerId}`, {
                        method: 'DELETE'
                    });

                    if (!response.ok) {
                        throw new Error('Failed to update offer status');
                    }

                    await Swal.fire({
                        title: 'Success!',
                        text: currentStatus ? 'Offer deactivated successfully' : 'Offer activated successfully',
                        icon: 'success',
                        background: '#18181B',
                        color: '#FFFFFF'
                    });

                    window.location.reload();
                }
            } catch (error) {
                showError(error.message);
            }
        }

        function closeModal() {
            document.getElementById('offerModal').classList.add('hidden');
        }

        function showError(message) {
            Swal.fire({
                title: 'Error!',
                text: message,
                icon: 'error',
                background: '#18181B',
                color: '#FFFFFF'
            });
        }

        // Close modal when clicking outside
        document.getElementById('offerModal').addEventListener('click', (e) => {
            if (e.target === document.getElementById('offerModal')) {
                closeModal();
            }
        });
    </script>
</body>
</html>
